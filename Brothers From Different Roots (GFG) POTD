			                                        // Brothers From Different Roots (GFG) POTD //

private:
void inorder(Node* root, vector<int> &ans)
{
    if(!root)  
    {
        return;
    }
    
    inorder(root->left, ans);
    ans.push_back(root->data);
    inorder(root->right, ans);
}

public:
int countPairs(Node* root1, Node* root2, int x)
{
    vector<int> ans1, ans2;
    
    inorder(root1, ans1);
    inorder(root2, ans2);
    
    int i=0;
    int j=ans2.size()-1;
    int cnt=0;
    
    while(i<ans1.size() && j>=0)
    {
        if(ans1[i]+ans2[j]==x)
        {
            cnt++;
            i++;
            j--;
        }
        else if(ans1[i]+ans2[j]<x)
        {
            i++;
        }
        else
        {
            j--;
        }
    }
    
    return cnt;
}
