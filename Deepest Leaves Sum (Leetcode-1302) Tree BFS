                                                    			// Deepest Leaves Sum (Leetcode-1302) Tree //
                                                    			// BFS, Vector pair

int deepestLeavesSum(TreeNode* root) 
{
    // node, level
    vector<pair<int,int>> nodes;
    int cnt=0;    
    int ans=0;

    queue<TreeNode*> q;
    q.push(root);

    while(!q.empty())
    {
        int n=q.size();
        cnt++;

        for(int i=0;i<n;i++)
        {
            auto temp=q.front();
            q.pop();

            if(temp->left)
            {
                q.push(temp->left);
            }
            if(temp->right)
            {
                q.push(temp->right);
            }
            if(temp->left==NULL && temp->right==NULL)
            {
                nodes.push_back({cnt, temp->val});
            }
        }
    }

    int maxi=0;
    for(auto i: nodes)
    {
        maxi=i.first;
    }

    for(auto i: nodes)
    {
        if(i.first==maxi)
        {
            ans+=i.second;
        }
    }

    return ans;
}
