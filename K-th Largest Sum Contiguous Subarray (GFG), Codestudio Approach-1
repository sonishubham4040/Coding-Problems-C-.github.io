                                                  // K-th Largest Sum Contiguous Subarray (GFG), Codestudio //
                                                  // K=2, Arr = {3,2,1} => 5 ({6,5,3,2,1}) //
                                                  // K=3, Arr = {2,6,4,1} => 11 ({13,12,11,10,8,6,5,4,2,1}) //
                                                  // Approach-1 Using Nested Loops //
                                                  // T.C = O(n*nlogn), S.C = O(n*n) //

#include <bits/stdc++.h>
using namespace std;

int kthLargest(vector<int> &Arr, int N, int K)
{
    vector<int> ans;
    
    for(int i=0;i<N;i++)
    {
        int sum=0;
        
        for(int j=i;j<N;j++)
        {
            sum+=Arr[j];
            ans.push_back(sum);
        }
    }
    
    sort(ans.begin(), ans.end());
    
    return ans[ans.size()-K];
}
