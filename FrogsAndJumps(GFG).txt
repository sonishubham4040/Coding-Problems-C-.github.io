			// Frogs and Jumps (GFG) POTD (26-3-23) //
			// n = 3, leaves = 4, frogs[] = {3, 2, 4} => 1 (index 1 not visited) //
			// n = 3, leaves = 6, frogs[] = {1, 3, 5} => 0 (All leaves visited) //

#include<bits/stdc++.h>
using namespace std;

int unvisitedLeaves(int N, int leaves, int frogs[]) 
{
    vector<bool> visited(leaves+1,false);
    
    for(int i=0;i<N;i++)
    {
        int j=frogs[i];
        
        if(visited[j]==false)
        {
            while(j<=leaves)
            {
                visited[j]=true;
                j+=frogs[i];
            }
        }
    }
    
    int ans=0;
    for(int i=1;i<=leaves;i++)
    {
        if(visited[i]==false)
        {
            ans++;
        }
    }
    return ans;
}

int main() 
{
    int N=3;
    int leaves=4;
    int frogs[N]={3,2,4};
    
    cout<<"Unvisited Leaves index(1-based): "<<unvisitedLeaves(N,leaves,frogs);
}