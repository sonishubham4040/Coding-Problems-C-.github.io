                          			// Cycle Detection In Undirected Graph (Codestudio) //
                          			// Using BFS Graph Striver //
                          			// Agar visited hai lekin parent ke equal nahi hai node to cycle banegi //
                          			// 1 Based indexing //
                          			// T.C = O(n+2E), S.C = O(n) //

#include <bits/stdc++.h>
using namespace std;

bool detect(int src, vector<int> adj[], int vis[])
{
    vis[src]=1;

    // node, parent
    queue<pair<int,int>> q;
    q.push({src, -1});

    while(!q.empty())
    {
        int node=q.front().first;
        int parent=q.front().second;
        q.pop();

        for(auto i: adj[node])
        {
            if(!vis[i])
            {
                vis[i]=1;
                q.push({i, node});
            }
            else if(parent!=i)
            {
                return true;
            }
        }
    }

    return false;
}

string cycleDetection (vector<vector<int>>& edges, int n, int m)
{
    // Write your code here.
    vector<int> adj[n+1];

    // edges to adjacency list
    for(auto i: edges)
    {
        int u=i[0];
        int v=i[1];
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    int vis[n+1]={0};

    // for graph components
    for(int i=1;i<=n;i++)
    {
        if(!vis[i])
        {
            if(detect(i, adj, vis)==true)
            {
                return "Yes";
            }        
        }
    }

    return "No";
}
