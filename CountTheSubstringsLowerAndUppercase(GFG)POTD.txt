			// Count the Substrings (GFG) POTD //
			// substrings with same number of lowercase and uppercase //
			// S = "gEEk" => Output: 3 {gE,gEEk, Ek} //

#include <bits/stdc++.h>
using namespace std;

/*
int countSubstring(string S)
    {
        // code here
        unordered_map<int,int> mp;
        int ans=0,sum=0;
        
        for(int i=0;i<S.size();i++)
        {
            if(isupper(S[i]))
                sum++;
            else
                sum--;
                
            if(sum==0)
                ans++;
                
            if(mp[sum])
                ans+=mp[sum];
                
            mp[sum]++;    
        }
        return ans;
    }
*/

int countSubstring(string S)
{
    int cnt=0;
        
    for(int i=0;i<S.size();i++)
    {
        int lower=0;
        int upper=0;
            
        for(int j=i;j<S.size();j++)
        {
            if(islower(S[j]))
            {
                lower++;
            }
            else
            {
                upper++;
            }
            if(lower==upper)
            {
                cnt++;
            }
        }
    }
    return cnt;
}

int main() 
{
    string S="gEEk";
    
    cout<<"Number of Substrings with same upper and lowercase letters: "<<countSubstring(S);
   
}