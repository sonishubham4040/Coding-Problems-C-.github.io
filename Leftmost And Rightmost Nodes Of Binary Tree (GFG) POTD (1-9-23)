                                                			// Leftmost And Rightmost Nodes Of Binary Tree (GFG) POTD (1-9-23) //
                                                /*
                                                        1
                                                       /  \
                                                     2      3
                                                    / \    / \
                                                   4   5  6   7   
                                                */
                                                			// => 1 2 3 4 7 //
                                                			// T.C = O(n), S.C = O(n nodes in level) //

#include <bits/stdc++.h>
using namespace std;

void printCorner(Node *root)
{
    // Your code goes here
    if(root==NULL)
    {
        return;
    }
    
    queue<Node*> q;
    q.push(root);
    
    while(!q.empty())
    {
        int size=q.size();
        
        for(int i=0;i<size;i++)
        {
            Node* temp=q.front();
            q.pop();
            
            if(i==0 || i==size-1)
            {
                cout<<temp->data<<" ";
            }
            
            if(temp->left)
            {
                q.push(temp->left);
            }
            
            if(temp->right)
            {
                q.push(temp->right);
            }
        }
    }
}
