                                              			// Bipartite Graph (GFG), (Leetcode-785), (Codestudio) //
                                              			// DFS Graph Striver //
                                              			// Biparte: No 2 adjacent nodes should hve same color 0 / 1. //
                                              			// 0 1 0 1 0 1 =>  Yes,  0 1 1 0 => No //
                                              			// T.C = O(n+2E), S.C = O(n) //

#include <iostream>  
using namespace std;

private:
bool dfs(int node, int col, int color[], vector<int>adj[])
{
    color[node]=col;
    
    for(auto i: adj[node])
    {
        if(color[i]==-1)
        {
            if(dfs(i, !col, color, adj)==false)
            {
                return false;
            }
        }
        else if(color[i]==col)
        {
            return false;
        }
    }
    
    return true;
}

public:
bool isBipartite(int V, vector<int>adj[])
{
    // Code here
    // DFS
    int color[V];
    
    for(int i=0;i<V;i++)
    {
        color[i]=-1;
    }
    
    // components of graph
    for(int i=0;i<V;i++)
    {
        if(color[i]==-1)
        {
            if(dfs(i, 0, color, adj)==false)
            {
                return false;
            }
        }
    }
    
    return true;
}
