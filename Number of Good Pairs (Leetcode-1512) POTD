                                              			// Number of Good Pairs (Leetcode-1512) POTD //
                                              			// 2 Approaches: Nested Loop and Map // 
                                              			// A pair (i, j) is called good if nums[i]==nums[j] and i<j //
                                              			// nums = [1,2,3,1,1,3] => 4 ((0,3), (0,4), (3,4), (2,5)) //
                                              			// T.C = O(n), S.C = O(n) //

#include <bits/stdc++.h>
using namespace std;

// Approach-1: Brute force n*n
int numIdenticalPairs(vector<int>& nums) 
{
    int n=nums.size();
    int cnt=0;

    for(int i=0;i<n;i++)
    {
        for(int j=i+1;j<n;j++)
        {
            if(nums[i]==nums[j])
            {
                cnt++;
            }
        }
    }

    return cnt;
}

// Approach-2: Using Map
int numIdenticalPairs(vector<int>& nums) 
{
    unordered_map<int,int> mp;
    int cnt=0;

    for(auto i: nums)
    {
        mp[i]++;
    }

    for(auto i: mp)
    {
        int n=i.second;
        cnt+=n*(n-1)/2;
    }

    return cnt;
}
