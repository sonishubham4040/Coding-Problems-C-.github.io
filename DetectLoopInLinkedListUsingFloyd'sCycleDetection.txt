            	// Detect Loop In Linked List Using Floyd's Cycle Detection //
            	// T.C = O(n) , S.C = O(1) //

#include <bits/stdc++.h>
using namespace std;

node* floydDetectLoop(node* head)
{
    if(head==NULL)
        return NULL;
    
    node* slow=head;
    node* fast=head;
    
    while(slow!=NULL && fast!=NULL)
    {
        fast=fast->next;
        if(fast!=NULL)
        {
            fast=fast->next;
        }
        
        slow=slow->next;
        
        if(slow==fast)
        {
            cout<<"Present At: "<<slow->data<<endl;
            return slow;
        }
    }
    return NULL;
}