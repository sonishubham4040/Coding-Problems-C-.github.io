                                          // Sum Of Big Integers (Codestudio) //
                                          // Sum Of Two Large Numbers (GFG) //
                                          // T.C = O(max(n, m)), S.C = O(max(n, m)) //

#include <bits/stdc++.h>
using namespace std;

// Codestudio
string findSum(string str1 , string str2)
{
	if(str1.length() > str2.length())
	{
		swap(str1, str2);
	}
 
    string str="";
 
    int n1=str1.length(), n2=str2.length();
    int diff=n2-n1;
	
    int carry = 0;
 
    for(int i=n1-1;i>=0;i--)
    {
        int sum=((str1[i]-'0') + (str2[i+diff]-'0') + carry);
        str.push_back(sum%10 + '0');
        carry=sum/10;
    }
 
    for(int i=n2-n1-1;i>=0;i--)
    {
        int sum=((str2[i]-'0') + carry);
        str.push_back(sum%10 + '0');
        carry=sum/10;
    }
 
    if(carry!=0)
	{
		str.push_back(carry+'0');
	}
        
    reverse(str.begin(), str.end());
    return str;
}

// GFG
string findSum(string X, string Y)
{
    if(X.length() > Y.length())
	{
		swap(X, Y);
	}
 
    string str="";
 
    int n1=X.length(), n2=Y.length();
    int diff=n2-n1;
	
    int carry = 0;
 
    for(int i=n1-1;i>=0;i--)
    {
        int sum=((X[i]-'0') + (Y[i+diff]-'0') + carry);
        str.push_back(sum%10 + '0');
        carry=sum/10;
    }
 
    for(int i=n2-n1-1;i>=0;i--)
    {
        int sum=((Y[i]-'0') + carry);
        str.push_back(sum%10 + '0');
        carry=sum/10;
    }
 
    if(carry!=0)
	{
		str.push_back(carry+'0');
	}
        
    reverse(str.begin(), str.end());
    
    // to remove extra zeroes 0
    while(str.length()>1 && str[0]=='0')
    {
        str.erase(0,1);
    }
     
    return str;
}

int main()
{
    string str1="123";
    string str2="123";
    
    cout<<"Sum of numbers: "<<findSum(str1, str2);
}
