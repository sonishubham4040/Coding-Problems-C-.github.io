		// Split Circular Linked List Into Two Halves (GFG) //
		// 1->2->3->4->5->6 = 1-2-3->head 4-5-6->head2 //

void splitList(Node *head, Node **head1_ref, Node **head2_ref)
{
    if(head==NULL)
        return;

    Node* slow=head;
    Node* fast=head->next;

    while(fast!=head && fast->next!=head)
    {
        fast=fast->next;
        if(fast->next!=head)
        {
            fast=fast->next;
        }
        slow=slow->next;
    }

    Node* temp=slow->next;
    slow->next=head;
    fast->next=temp;
    
    *head1_ref=head;
    *head2_ref=temp;
}