            		// Minimum Swaps To Group All 1's Together (gfg, leetcode, codestudio) //
                        // {1, 0, 1, 1, 0} = 1 //
#include<bits/stdc++.h>
using namespace std;

int minSwaps(int a[], int n) 
{
   if(n==1 and a[0]==0) return -1;
   int ans=INT_MAX,ones=0;
   
   //count total ones in the array
   for(int i=0;i<n;i++) if(a[i]==1) ones++;
   if(ones==n) return 0;
   if(ones==0) return -1;
   
   int k=ones; //this is our k
   
   //subarray of size k with max number of 1s using sliding window
   //first window
   int winOnes=0;
   for(int i=0;i<k;i++)
   {
       if(a[i]==1) winOnes++;
   }
   //swaps
   ans=min(ans,(k-winOnes));  //sum liya subarray ka and 1s ko subtract kiya jisse 0 mila
   
   //remaining windows
   for(int i=k;i<n;i++)
   {
       if(a[i]==1)   winOnes++;
       if(a[i-k]==1) winOnes--;
       ans=min(ans,(k-winOnes));
   }
   return ans;
}

int main()
{
    int arr[]={1,0,1,0,0};
    int n=sizeof(arr)/sizeof(arr[0]);
    cout<<"Minimum swaps to group all 1's together: "<<minSwaps(arr,n);
}