			// Binary Tree Level Order Traversal II (Leetcode-107) //
			// Input: root = [3,9,20,null,null,15,7] => Output: [[15,7],[9,20],[3]] //
			// T.C = O(N), S.C = O(N) (NOT CONFIRM) //

#include <bits/stdc++.h>
using namespace std;

vector<vector<int>> levelOrderBottom(TreeNode* root)
{
    vector<vector<int>> ans;
        
    if(root==NULL)
    {
        return ans;
    }

    queue<TreeNode*> q;
    stack<vector<int>> s;
    q.push(root);

    while(!q.empty())
    {
        vector<int> output;
            
        int n=q.size();
            
        for(int i=0;i<n;i++)
        {
            TreeNode* temp=q.front();
            q.pop();
            output.push_back(temp->val);

            if(temp->left)
            {
                q.push(temp->left);
            }
            if(temp->right)
            {
                q.push(temp->right);
            }
        }

        s.push(output);
    }

    while(!s.empty())
    {
        ans.push_back(s.top());
        s.pop();
    }

    return ans;
}