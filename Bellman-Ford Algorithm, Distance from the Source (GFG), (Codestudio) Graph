                                      			// Bellman-Ford Algorithm, Distance from the Source (GFG), (Codestudio) //
                                      			// Bellman Ford Graph Striver //
                                      			// Relaxation for n-1 nodes for shortest distance from souce //
                                      			// Relaxation Nth time to check negative - cycle or not //
                                      			// T.C = O(V*E), S.C = O(V) //

#include <bits/stdc++.h>
using namespace std  

vector<int> bellman_ford(int V, vector<vector<int>>& edges, int S) 
{
    // Code here
    vector<int> dist(V, 1e8);
    dist[S]=0;
    
    // Relaxation or Iteration for n-1 nodes
    for(int i=0;i<V-1;i++)
    {
        for(auto j: edges)
        {
            int u=j[0];
            int v=j[1];
            int wt=j[2];
            
            if(dist[u]!=1e8 && dist[u]+wt < dist[v])
            {
                dist[v]=dist[u]+wt;
            }
        }
    }
    
    // Nth relaxation for checking negative cycle
    for(auto i: edges)
    {
        int u=i[0];
        int v=i[1];
        int wt=i[2];
        
        if(dist[u]!=1e8 && dist[u]+wt < dist[v])
        {
            return {-1};
        }
    }
    
    return dist;
}
