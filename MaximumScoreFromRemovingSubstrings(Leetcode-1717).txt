		// Maximum Score From Removing Substrings (Leetcode-1717) //
		// Using Stacks //
		// s = "aabbaaxybbaabb", x = 5, y = 4 => 20 //

#include <bits/stdc++.h>
using namespace std;

int solve(string s, int first, int second, string rem)
{
    stack<char>st;
    int total=0;

    // firstly for high amount x or y
    for(int i=0;i<s.size();i++)
    {
        if(st.size() && s[i]==rem[1] && st.top()==rem[0])
        {
            total+=first;
            st.pop();        
        }
        else
        {
            st.push(s[i]);
        }
    }
    s="";
    while(st.size())
    {
        s+=st.top();
        st.pop();
    }

    // then for remaining low amount x or y
    for(int i=0;i<s.size();i++)
    {
        if(st.size() && s[i]==rem[1] && st.top()==rem[0])
        {
            total+=second;
            st.pop();        
        }
        else
        {
            st.push(s[i]);
        }
    }
    return total;
}

int maximumGain(string s, int x, int y) 
{
    int ans=0;
    if(x>y)
    {
        ans=solve(s,x,y,"ab");
    }
    else
    {
        ans=solve(s,y,x,"ba");
    }
    return ans;
}

int main() 
{
    string s="cdbcbbaaabab";
    int x=4;
    int y=5;
    
    cout<<"Maximum Score: "<<maximumGain(s,x,y);
}