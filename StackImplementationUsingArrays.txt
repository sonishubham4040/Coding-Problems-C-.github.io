            		// Stack Implementation Using Arrays //
            		// T.C = O(1) //
            
#include <bits/stdc++.h>
using namespace std;

class Stack
{
    // Properties
    public: 
    int top;
    int *arr;
    int size;
    
    // Behaviour
    Stack(int size)
    {
        this->size=size;
        arr=new int[size];
        top=-1;
    }
    
    void push(int element)
    {
        if(size - top > 1)
        {
            top++;
            arr[top]=element;
        }
        else
        {
            cout<<"Stack Overflow"<<endl;
        }
    }
    
    void pop()
    {
        if(top>=0)
        {
            top--;
        }
        else
        {
            cout<<"Stack Underflow"<<endl;
        }
    }
    
    int peek()
    {
        if(top>=0)
        {
            return arr[top];
        }
        else
        {
            cout<<"Stack Is Empty"<<endl;
            return -1;
        }
    }
    
    bool isEmpty()
    {
        if(top==-1)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
};

int main() 
{
    Stack st(5);
    
    st.push(20);
    st.push(30);
    st.push(40);
    
    cout<<"Top element: "<<st.peek()<<endl;
    st.pop();
    
    cout<<"Top element: "<<st.peek()<<endl;
    st.pop();
    
    cout<<"Top element: "<<st.peek()<<endl;
    st.pop();
    
    cout<<"Top element: "<<st.peek()<<endl;
    
    if(st.isEmpty())
    {
        cout<<"Stack Is Empty"<<endl;
    }
    else
    {
        cout<<"Stack is not empty"<<endl;
    }
}