		// Clone A Linked List With Next And Random Pointer (GFG) //
		// Approach-2 Using Map //
		// T.C = O(n), S.C = O(n) // 

void insertAtTail(Node* &head, Node* &tail, int d)
{
    Node* newNode=new Node(d);
    if(head==NULL)
    {
        head=newNode;
        tail=newNode;
        return;
    }
    else
    {
        tail->next=newNode;
        tail=newNode;
    }
}
    
Node *copyList(Node *head)
{
    //Write your code here
        
    // step 1  Create a Clone List
    Node* cloneHead=NULL;
    Node* cloneTail=NULL;
        
    Node* temp=head;
        
    while(temp!=NULL)
    {
        insertAtTail(cloneHead,cloneTail,temp->data);
        temp=temp->next;
    }
        
    // step 2 Create a Map
    unordered_map<Node*, Node*> oldToNewNode;
        
    Node* originalNode=head;
    Node* cloneNode=cloneHead;
        
    while(originalNode!=NULL && cloneNode!=NULL)
    {
        oldToNewNode[originalNode]=cloneNode;
        originalNode=originalNode->next;
        cloneNode=cloneNode->next;
    }
        
    originalNode=head;
    cloneNode=cloneHead;
        
    while(originalNode!=NULL)
    {
        cloneNode->arb=oldToNewNode[originalNode->arb];
        originalNode=originalNode->next;
        cloneNode=cloneNode->next;
    }
    return cloneHead;
}