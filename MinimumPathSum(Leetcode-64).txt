			// Minimum Path Sum (Leetcode-64) POTD (27-3-23) //
			// Using Dp //
			// Input: grid = [[1,3,1],[1,5,1],[4,2,1]] => Output: 7 //
			// Explanation: Because the path 1+3+1+1+1 minimizes the sum //

#include <bits/stdc++.h>
using namespace std;

int minPathSum(vector<vector<int>>& grid) 
{
    int n=grid.size();
    int m=grid[0].size();

    for(int i=1;i<n;i++)
    {
        grid[i][0]+=grid[i-1][0];
    }

    for(int j=1;j<m;j++)
    {
        grid[0][j]+=grid[0][j-1];
    }

    for(int i=1;i<n;i++)
    {
        for(int j=1;j<m;j++)
        {
            grid[i][j]+=min(grid[i-1][j], grid[i][j-1]);
        }
    }
    return grid[n-1][m-1];
}

int main() 
{
    vector<vector<int>> grid={{1,3,1},{1,5,1},{4,2,1}};
    
    cout<<"Minimum Path Sum: "<<minPathSum(grid);
}