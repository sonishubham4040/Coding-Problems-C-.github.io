                                        			// Rearrange a linked list (GFG) //
                                        			// Linked List //
                                        			// 2 Approaches //
                                        			// 1 2 3 4 5 => 1 3 5 2 4 //
                                        			// T.C = O(n), S.C = O(1) //

#include <bits/stdc++.h>
using namespace std;    

// Approach-1
void rearrangeEvenOdd(Node *head)
{
   // Your Code here
   Node* oddH=head;
   Node* evenH=head->next;
   Node* tail=evenH;
   
   while(oddH->next!=NULL && evenH->next!=NULL)
   {
       oddH->next=oddH->next->next;
       oddH=oddH->next;
       
       evenH->next=evenH->next->next;
       evenH=evenH->next;
   }
   
   oddH->next=tail;
}

// Approach-2
void rearrangeEvenOdd(Node *head)
{
   // Your Code here
   Node* oddH=head;
   Node* evenH=head->next;
   Node* oddCurr=oddH;
   Node* evenCurr=evenH;
   
   while(evenCurr!=NULL && evenCurr->next!=NULL)
   {
       oddCurr->next=evenCurr->next;
       oddCurr=oddCurr->next;
       
       evenCurr->next=oddCurr->next;
       evenCurr=evenCurr->next;
   }
   
   oddCurr->next=evenH;
}
