				// Permutation In String (Leetcode) //
				// ab, eidbaooo = ab or ba is present together => true //
				// ab, eidboaoo = ab or ba is not present together => false //

#include <bits/stdc++.h>
using namespace std;

bool checkEqual(int count1[26], int count2[26])
    {
        for(int i=0;i<26;i++)
        {
            if(count1[i]!=count2[i])
                return 0;
        }
        return 1;
    }
    
bool checkInclusion(string s1, string s2) {
        
        // count store karo
        int count1[26]={0};
        for(int i=0; i<s1.length(); i++)
        {
            int number=0;
            number=s1[i]-'a';
            count1[number]++;
        }
        
        // checking first window
        int i=0;
        int windowSize=s1.length();
        int count2[26]={0};
        
        // run for first window
        while(i<windowSize && i<s2.length())
        {
            int number=0;
            number=s2[i]-'a';
            count2[number]++;
            i++;
        }
        if(checkEqual(count1,count2))
            return 1;
        
        //aage ki window process
        while(i<s2.length())
        {
            char newChar=s2[i];
            int number=newChar-'a';
            count2[number]++;
            
            char oldChar=s2[i-windowSize];
            number=oldChar-'a';
            count2[number]--;
            i++;
            if(checkEqual(count1,count2))
                return 1;
        }
        return 0;
    }

int main() 
{
    string s1="ab";
    string s2="eidbaooo";
    cout<<"True or Not : "<<checkInclusion(s1,s2);
}
   