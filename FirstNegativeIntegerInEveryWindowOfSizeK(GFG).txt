			// First Negative Integer In Every Window Of Size K (GFG) //
			// Queue Questions Q2 Using Deque //
			// A[] = {-8, 2, 3, -6, 10}, N=5, K=2 => {-8 0 -6 -6} //
			// As ({-8,2}=-8, {2,3}=0, {3,-6}=-6, {-6,10}=-6) //

#include <bits/stdc++.h>
using namespace std;

vector<long long> printFirstNegativeInteger(long long int A[],
long long int N, long long int K)
{
    vector<long long> ans;
    deque<long long int> dq;
    
    // process first window of size k
    for(int i=0;i<K;i++)
    {
        if(A[i]<0)
        {
            dq.push_back(i); // storing index
        }
    }
    
    // store answer for first k sized window
    if(dq.size()>0)
    {
        ans.push_back(A[dq.front()]);
    }
    else
    {
        ans.push_back(0);
    }
    
    // processing remaining windows
    for(int i=K;i<N;i++)
    {
        // removal
        if(!dq.empty() && (i-dq.front()>=K))
        {
            dq.pop_front();
        }
        
        // addition
        if(A[i]<0)
        {
            dq.push_back(i);
        }
        
        //  ans store
        if(dq.size()>0)
        {
            ans.push_back(A[dq.front()]);
        }
        else
        {
            ans.push_back(0);
        }
    }
    return ans;
}

