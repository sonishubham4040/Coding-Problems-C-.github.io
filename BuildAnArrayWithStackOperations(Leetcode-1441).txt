		// Build an Array With Stack Operations (Leetcode-1441) //
		// target = [1,3], n = 3 => ["Push","Push","Pop","Push"] //
		// target = [1,2,3], n = 3 => ["Push","Push","Push"] //

#include<bits/stdc++.h>
using namespace std;

/*
vector<string> buildArray(vector<int>& target, int n)
{
	int curr=0;
        vector<string> ans;
        
        for(int i=1;i<=n;i++)
        {
            if(curr==target.size())
            {
                break;
            }
            
            if(i==target[curr])
            {
                ans.push_back("Push");
                curr++;
            }
            else
            {
                ans.push_back("Push");
                ans.push_back("Pop");
            }
        }
        return ans;
}
*/

vector<string> buildArray(vector<int>& target, int n)
{
    vector<string> ans;
    int curr=0;  
    
    for(int i=1;i<=target[target.size()-1];i++)
    {
        ans.push_back("Push");
        if(i==target[curr])
        {
            curr++;
        }
        else
        {
            ans.push_back("Pop");
        }
    }
    return ans;
}

void print(vector<string> &ans)
{
    for(auto i:ans)
    {
        cout<<i<<" ";
    }
    cout<<endl;
}

int main()
{
    vector<int> target={1,3};
    int n=3;
    
    vector<string> ans=buildArray(target,n);
    print(ans);
}