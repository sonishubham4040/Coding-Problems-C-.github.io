                       // Search in Sorted Rotated array //
            
#include <iostream>
using namespace std;

int getPivot(int arr[], int n)
{
    int s=0;
    int e=n-1;
    int mid=s+(e-s)/2;
    while(s<e)
    {
        if(arr[mid]>=arr[0])
        {
            s=mid+1;
        }
        else
        {
            e=mid;
        }
        mid=s+(e-s)/2;
    }
    return s;
}

int binary(int arr[], int s, int e, int k)
{
    int start = s, end = e;
    int mid = start + (end-start)/2;

   while(start<=end)
   {
       if(arr[mid]==k)
       {
        return mid;   
       }
       else if(arr[mid]<k)
       {
           start=mid+1;
       }
       else if(arr[mid]>k)
       {
           end=mid-1;
       }
       mid = start + (end-start)/2;
   }

   return -1;
}

int main()
{
    int arr[5]={5,8,17,2,3};
    int n=5;
    int k=2;
    int pivot = getPivot(arr,5);
    if(k>=arr[pivot] && k<=arr[n-1])
    {
    cout<<"Present at index: "<<binary(arr,pivot,n-1,k);
    }
    else
    {
     cout<<"Present at index: "<<binary(arr,0,pivot-1,k);
    }

}