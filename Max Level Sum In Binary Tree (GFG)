                                                      // Max Level Sum In Binary Tree (GFG) //
                                                      // T.C = O(n), S.C = O(n) //

int maxLevelSum(Node* root)
{
    if(root==NULL)
    {
        return 0;
    }
    
    queue<Node*> q;
    q.push(root);
    
    int maxSum=INT_MIN;
    
    while(!q.empty())
    {
        int n=q.size();
        int levelSum=0;
        
        for(int i=0;i<n;i++)
        {
            Node* temp=q.front();
            q.pop();
            levelSum+=temp->data;
            
            if(temp->left)
            {
                q.push(temp->left);
            }
            
            if(temp->right)
            {
                q.push(temp->right);
            }
        }
        
        if(levelSum>maxSum)
        {
            maxSum=levelSum;
        }
    }
    
    return maxSum;
}
