                                                			// Find Mode in Binary Search Tree (Leetcode-501) POTD //
                                                			// Most occured values in Tree //
                                                		  // T.C = O(n), S.C = O(n) //

private:
void inorder(TreeNode* root, vector<int> &temp)
{
    if(!root)
    {
        return;
    }

    inorder(root->left, temp);
    temp.push_back(root->val);
    inorder(root->right, temp);
}

public:
vector<int> findMode(TreeNode* root) 
{
    vector<int> temp;
    inorder(root, temp);

    vector<int> ans;

    unordered_map<int,int> mp;
    for(auto i: temp)
    {
        mp[i]++;
    }

    int maxi=0;
    for(auto i: mp)
    {
        maxi=max(maxi, i.second);
    }

    for(auto i: mp)
    {
        if(i.second==maxi)
        {
            ans.push_back(i.first);
        }
    }

    return ans;
}
