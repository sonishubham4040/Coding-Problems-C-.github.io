			// Prime In Diagonal (Leetcode Contest 340, Q1) //
			// Return the largest prime number that lies on at least one of the diagonals of nums. In case, no prime is present on any of the diagonals, return 0//
			// Input: nums = [[1,2,3],[5,6,7],[9,10,11]], Output: 11 //

#include <bits/stdc++.h>
using namespace std;

bool isPrime(int val)
{
    if(val<=1)
    {
        return 0;
    }
        
    for(int i=2;i<=sqrt(val);i++)
    {
        if(val%i==0)
        {
            return 0;
        }
    }
    return 1;
}
    
int diagonalPrime(vector<vector<int>>& nums) 
{
    int ans=0;
    for(int i=0;i<nums.size();i++)
    {
        if(isPrime(nums[i][i]))
        {
            ans=max(ans,nums[i][i]);
        }
        if(isPrime(nums[i][nums.size()-i-1]))
        {
            ans=max(ans,nums[i][nums.size()-i-1]);
        }
    }
    return ans;           
}