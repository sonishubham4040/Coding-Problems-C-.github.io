			// Best Team With No Conflicts (Leetcode-1626) //
// sum of scores where younger player's score is not greater than older player Using DP and Vector pair //
			// scores = [1,3,5,10,15], ages = [1,2,3,4,5] => 34 (1+3+5+10+15) //
			// scores = [4,5,6,5], ages = [2,1,2,1] => 16 (5+6+5) //

#include <bits/stdc++.h>
using namespace std;

int bestTeamScore(vector<int>& scores, vector<int>& ages) 
{
    int n=scores.size();
    vector<pair<int,int>> players;
    int dp[n],ans=0;
    
    for(int i=0;i<n;i++)
    {
        players.push_back({ages[i],scores[i]});
    }
    
    sort(players.begin(),players.end());
    
    for(int i=0;i<n;i++)
    {
        dp[i]=players[i].second;
        
        for(int j=0;j<i;j++)
        {
            if(players[j].second<=players[i].second)
            {
                dp[i]=max(dp[i],dp[j]+players[i].second);
            }
        }
        ans=max(ans,dp[i]);
    }
    return ans;
}

int main() 
{
    vector<int> scores={4,5,6,5};
    vector<int> ages={2,1,2,1};
    
    cout<<"Maximum Score Of A Team: "<<bestTeamScore(scores,ages);
}