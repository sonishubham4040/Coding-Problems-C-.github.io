                                            			// Bipartite Graph (GFG), (Leetcode-785), (Codestudio) //
                                            			// BFS Graph Striver //
                                            			// Biparte: No 2 adjacent nodes should hve same color 0 / 1. //
                                            			// 0 1 0 1 0 1 =>  Yes,  0 1 1 0 => No //
                                            			// T.C = O(n+2E), S.C = O(n) //

#include <iostream>
using namespace std;

private:
bool bfs(int start, int color[], int V, vector<int>adj[])
{
    queue<int> q;
    q.push(start);
    
    color[start]=0;
    
    while(!q.empty())
    {
        int node=q.front();
        q.pop();
        
        for(auto i: adj[node])
        {
            // color nahi diya to opposite color dedo
            if(color[i]==-1)
            {
                color[i]=!color[node];
                q.push(i);
            }
            // adjacent nodes me same color hai
            else if(color[i]==color[node])
            {
                return false;
            }
        }
    }
    
    return true;
}

public:
bool isBipartite(int V, vector<int>adj[])
{
    // Code here
    // BFS
    int color[V];
    
    for(int i=0;i<V;i++)
    {
        color[i]=-1;
    }
    
    // components of graph
    for(int i=0;i<V;i++)
    {
        if(color[i]==-1)
        {
            if(bfs(i, color, V, adj)==false)
            {
                return false;
            }
        }
    }
    
    return true;
}
