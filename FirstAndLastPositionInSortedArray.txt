             // Fisrt and Last position of element in sorted Array //
             // {1 3 3 4 5} = 1 and 2 index //

#include <iostream>
using namespace std;

int Fsearch(int arr[], int n, int k)
{
    int start=0;
    int end=n-1;
    int mid=start+(end-start)/2;
    int ans=-1;
    while(start<=end)
    {
        if(arr[mid]==k)
        {
            ans = mid;
            end=mid-1;
        }
        else if(arr[mid]<k)
        {
            start=mid+1;
        }
        else if(arr[mid]>k)
        {
            end=mid-1;
        }
        mid=start+(end-start)/2;
    }
    return ans;
}

int Lsearch(int arr[], int n, int k)
{
    int start=0;
    int end=n-1;
    int mid=start+(end-start)/2;
    int ans=-1;
    while(start<=end)
    {
        if(arr[mid]==k)
        {
            ans = mid;
            start=mid+1;
        }
        else if(arr[mid]<k)
        {
            start=mid+1;
        }
        else if(arr[mid]>k)
        {
            end=mid-1;
        }
        mid=start+(end-start)/2;
    }
    return ans;
}

int main() {
    
    int arr[5]={1,3,5,5,9};
    int k=5;
    cout<<"First index at "<<Fsearch(arr,5,k)<<endl;
    cout<<"Last index at "<<Lsearch(arr,5,k);
    
    return 0;
}