			// Modify Linked List-1 (GFG) POTD (27-5-23) //
			// Approach-1 Using Extra Space Vector //
			// Modify First half like, arr[0]=arr[4]-arr[0], arr[1]=arr[3]-arr[1] etc.. 1->2->3->4->5 => 4->2->3->4->5 //
			// Modify Second half with first half original values like, 4->2->3->2->1
			// linked list = 10->4->5->3->6 => -4->-1->5->4->10 //
			// linked list = 2->9->8->12->7->10 => 8->-2->4->8->9->2
			// T.C = O(n), S.C = O(n) //

#include <bits/stdc++.h>
using namespace std;

struct Node* modifyTheList(struct Node *head)
{
    vector<int> ans;
    
    Node* temp=head;
    
    while(temp!=NULL)
    {
        ans.push_back(temp->data);
        temp=temp->next;
    }
    
    int n=ans.size();
    int i=0;
    int j=n-1;
    
    while(i<j)
    {
        int t=ans[i];
        ans[i]=ans[j]-ans[i];
        ans[j]=t;
        i++;
        j--;
    }
    
    Node* res=head;
    int k=0;
    
    while(res!=NULL)
    {
        res->data=ans[k++];
        res=res->next;
    }
    
    return head;
}