                                  			// Floyd Warshall (GFG) //
                                  			// Multi Source Shortest Path //
                                  			// Dijkstra and Bellman ford were Single Source shortest path //
                                  			// Can detect negative cycle also if matrix[i][i]<0 means cost of reaching self node is less than 0 then -ve cycle //
                                  			// T.C = O(n^3), S.C = O(1) //

#include <bits/stdc++.h>
using namespace std;

void shortest_distance(vector<vector<int>> &matrix)    
{
    // Code here
    int n=matrix.size();
    
    // setting -1 to infinity
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            if(matrix[i][j]==-1)
            {
                matrix[i][j]=1e9;
            }
            if(i==j)
            {
                matrix[i][j]=0;
            }
        }
    }
    
    // each node via every node: matrix[i][j] = matrix[i][k] + matrix[k][j]
    for(int k=0;k<n;k++)
    {
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                matrix[i][j]=min(matrix[i][j], matrix[i][k]+matrix[k][j]);
            }
        }
    }
    
    // setting back from infniity to -1
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            if(matrix[i][j]==1e9)
            {
                matrix[i][j]=-1;
            }
        }
    }
}
