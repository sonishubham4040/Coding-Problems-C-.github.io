			// Check Completeness Of A Binary Tree (Leetcode-958) //
			// Complete Binary Tree (GFG) //
			// T.C = O(n), S.C = O(n) //

#include <bits/stdc++.h>
using namespace std;

int countNodes(TreeNode* root)
{
    // base case
    if(root==NULL)
    {
        return 0;
    }

    int ans=1 + countNodes(root->left) + countNodes(root->right);
    return ans;
}

bool isCBT(TreeNode* root, int index, int count)
{
    if(root==NULL)
    {
        return true;
    }

    if(index>=count)
    {
        return false;
    }
    else
    {
        bool left=isCBT(root->left, 2*index+1, count);
        bool right=isCBT(root->right, 2*index+2, count);
        
        return (left && right);
    }
}

bool isCompleteTree(TreeNode* root) 
{
    int index=0;
    int count=countNodes(root);

    if(isCBT(root, index, count))
    {
        return true;
    }
    else
    {
        return false;
    }
}