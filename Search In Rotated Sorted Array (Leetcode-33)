                                            			// Search In Rotated Sorted Array (Leetcode-33) //
                                            			// Using 1 Time Binary Search // 
                                            			// T.C = O(logn), S.C = O(1) //

#include <bits/stdc++.h>
using namespace std;

int search(vector<int>& nums, int target)
{
    // 1 Bar Binary Search

    int n=nums.size();
    int s=0;
    int e=n-1;

    while(s<=e)
    {
        int mid=s+(e-s)/2;

        // target found
        if(nums[mid]==target)
        {
            return mid;
        }
        else if(nums[mid]>=nums[s])
        {
            if(target>=nums[s] && target<=nums[mid])
            {
                e=mid-1;
            }
            else
            {
                s=mid+1;
            }
        }
        else
        {
            if(target>=nums[mid] && target<=nums[e])
            {
                s=mid+1;
            }
            else
            {
                e=mid-1;
            }
        }
    }

    return -1;
}
