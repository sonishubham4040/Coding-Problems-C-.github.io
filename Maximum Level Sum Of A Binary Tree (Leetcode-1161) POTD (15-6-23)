                                      // Maximum Level Sum Of A Binary Tree (Leetcode-1161) POTD (15-6-23) //
                                      // T.C = O(n), S.C = O(n) //

int maxLevelSum(TreeNode* root)
{
    if(root==NULL)
    {
        return 0;
    }

    queue<TreeNode*> q;
    q.push(root);

    int maxLevel=1;
    int level=1;
    int maxSum=INT_MIN;

    while(!q.empty())
    {
        int levelSum=0;
        int n=q.size();

        for(int i=0;i<n;i++)
        {
            TreeNode* node=q.front();
            q.pop();
            levelSum+=node->val;

            if(node->left)
            {
                q.push(node->left);
            }

            if(node->right)
            {
                q.push(node->right);
            }
        }

        if(levelSum>maxSum)
        {
            maxSum=levelSum;
            maxLevel=level;
        }

        level++;
    }

    return maxLevel;
}
