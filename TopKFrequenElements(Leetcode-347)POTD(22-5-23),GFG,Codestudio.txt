			// Top K Frequent Elements (Leetcode-347) POTD (22-5-23), GFG, Codestudio //
			// Input: nums = [1,1,1,2,2,3], k=2 => Output: [1,2] //
			// Input: nums = [3,0,1,0], k=1 => Output: [0] //
			// Using Map and Max Heap (Priority Queue) //
			// T.C = O(klogn), S.C = O(n) //

#include <bits/stdc++.h>
using namespace std;

vector<int> topKFrequent(vector<int>& nums, int k) 
{
    vector<int> ans;
    map<int,int> mp;
    priority_queue<pair<int,int>> p;

    for(auto i:nums)
    {
        mp[i]++;
    }

    for(auto i:mp)
    {
        p.push(make_pair(i.second, i.first));
    }
    
    while(k--)
    {
        auto temp=p.top();
        p.pop();
        ans.push_back(temp.second);
    }
    
    return ans;
}