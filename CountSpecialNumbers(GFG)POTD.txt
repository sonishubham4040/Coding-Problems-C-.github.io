		// Count Special Numbers (GFG) POTD //
		// A number is said to be a special number if it is divisible by at least 1 other element of the array //
		// arr[] = {2, 3, 6} => 1 (6 is divisible) //
		// arr[] = {5, 5, 5, 5} => 4 (all are divisble by each other) //
		// T.C = O(n*n), S.C = O(1) //

#include <bits/stdc++.h>
using namespace std;

int countSpecialNumbers(int N, vector<int> arr) 
{
    sort(arr.begin(),arr.end());
    
    int cnt=0;
    
    for(int i=0;i<N;i++)
    {
        if(arr[i]==arr[i+1])
        {
            cnt++;
        }
        else
        {
            for(int j=0;j<i;j++)
            {
                if(arr[i]%arr[j]==0)
                {
                    cnt++;
                    break;
                }
            }
        }
    }
    return cnt;
}

int main() 
{
    int N=4;
    vector<int> arr={5,5,5,5};
    
    cout<<"Number of special numbers divisble by other: "<<countSpecialNumbers(N,arr);
}