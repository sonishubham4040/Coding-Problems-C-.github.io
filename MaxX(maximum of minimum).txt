                	// Max X //
                	// Maximum of Minimum //
                
#include<bits/stdc++.h>
using namespace std;

bool isPossible(vector<vector<int>> &arr, int n, int B, int mid)
{
    int count=0;
    for(int i=0;i<n;i++)
    {
        for(int j=1;j<=arr[i][0];j++)
        {
            if(arr[i][j]<=mid)
            {
                count+=arr[i][j];
            }
        }
        if(count>B)
        {
            return false;
        }
    }
    return true;
}

int findMaxX(int n, vector<vector<int>> &arr, int B)
{
    int s=0;
    int sum=0;
    for(int i=0;i<n;i++)
    {
        for(int j=1;j<=arr[i][0];j++)
        {
            sum+=arr[i][j];
        }
    }
    int e=sum;
    int mid=s+(e-s)/2;
    int ans=-1;
    
    while(s<=e)
    {
        if(isPossible(arr,n,B,mid))
        {
            ans=mid;
            s=mid+1;
        }
        else
        {
            e=mid-1;
        }
        mid=s+(e-s)/2;
    }
    return ans;
}

int main()
{
    // Declare a 2D array // 
    vector<vector<int>> arr;
    int n=arr.size();
    int B=20;
    
    cout<<findMaxX(n,arr,B);
}